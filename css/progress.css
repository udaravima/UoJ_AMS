/* Set default values for horizontal bars */
[data-pss], [data-pss-container] {
  --pss-value: 65;
  --pss-left: #08a33e;
  --pss-right: #DDF4F9;
  font-size: .7em;
  color: #f1fcfe;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  flex-wrap: wrap;
}

/* Set default values for circular bars */
[data-pss="rad"], [data-pss-container="rad"] {
  --pss-value: 65;
  --pss-width: .4em;
  --pss-left: #DDF4F9;
  --pss-right: #08a33e;
  --pss-center: #14975a;
  font-size: .8em;
  color: #f1fcfe;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  flex-wrap: wrap;
}

/* #### HORIZONTAL BAR STYLES #### */

/* Creates the HORIZONTAL BAR container */
[data-pss], [data-pss-container] > * {
  display: inline-flex;
  position: relative;
  width: 12em;
  height: 1.45em;
  padding-left: .45em;
  border-radius: 10em;
  align-items: center;
  overflow: hidden;
  /* Divides the element's background into two colors */
  background-origin: border-box;
  background-image: linear-gradient(
    90deg,
    /* Makes the division occur at the percentage of --pss-value */
    /* max() function ensure that the minimum value of --pss-value are 0.001 */
    var(--pss-left) calc(100% / (100 / max(var(--pss-value), 0.001))),
    var(--pss-right) 0
  );
}

/* Creates a pseudo element with a circle in the division of the container */
[data-pss]::before, [data-pss-container] > *::before {
  position: absolute;
  height: 100%;
  box-sizing: content-box;
  aspect-ratio: 1/1;
  content: '';
  /* Centers the element in the division */
  /* min() and max() functions ensure that the minimum and maximum value of --pss-value are 0.001 and 100 */
  left: calc(100% / (100 / min(max(var(--pss-value), 0.001), 100)));
  top: 0;
  transform: translateX(-50%);
  /* Makes the background a circle with de --pss-left color */
  background-image: radial-gradient(
    circle at 0,
    var(--pss-left) 50%,
    var(--pss-right) 0
  );
}

/* Creates a pseudo element with content of the aria-label attribute */
[data-pss]::after,
[data-pss-container] > *::after {
  display: flex;
  position: absolute;
  height: 100%;
  top: 0;
  left: 100%;
  align-items: center;
  content: attr(aria-label);
  /* Centers the element in relation to the left side of the bar container */
  left: calc((100% * (min(var(--pss-value), 100) / 100) / 2));
  transform: translateX(-50%);
}

/* #### CIRCULAR BAR STYLES #### */

/* Creates the CIRCULAR BAR container */
[data-pss="rad"], [data-pss-container="rad"] > * {
  display: inline-flex;
  width: 5em;
  height: auto;
  aspect-ratio: 1;
  padding-left: unset;
  border-radius: 50%;
  position: relative;
  align-items: center;
  justify-content: center;
  overflow: unset;
  /* "Divides" the element's background into two colors */
  /* The division is made by creating a pizza slice design */
  background-origin: border-box;
  background-image:
    /* Creates a circle image in the center of the element */
    radial-gradient(
      circle,
      /* Sets circle color with variable --pss-center */
      /* Sets the size of the circle with the variable --pss-widht:
      the bigger the width of the bar, the smaller the size of the circle. */
      /* 70.71% refers to the distance from the circle to the vertices of the box container. */
      /* 0.5px is just to smooth the imagem and prevent from getting pixelated. */
      var(--pss-center) calc(70.71% - var(--pss-width) - 0.5px),
      transparent calc(70.71% - var(--pss-width))),
    /* Creates the sliced pizza image below the previous image */
    conic-gradient(
      var(--pss-right) calc(100% / (100 / max(var(--pss-value), 0.001))),
      var(--pss-left) 0
    );
}

/* Creates a pseudo element with a circle in the top center of the cotnainer */
[data-pss="rad"]::before,
[data-pss-container="rad"] > *::before {
  width: 100%;
  height: 100%;
  aspect-ratio: 1/1;
  box-sizing: content-box;
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  /* Creates the circle image in the top center of the container with the --pss-width size */
  background-image: radial-gradient(
    circle at 50% calc(var(--pss-width) / 2 + 0.1%),
    var(--pss-right) calc(var(--pss-width) / 2 + 0.05%),
    transparent calc(var(--pss-width) / 2 + 0.15%)
  );
  transform: unset;
}

/* Creates a pseudo element with a circle where the division of the sliced pizza design is made */
[data-pss="rad"]::after,
[data-pss-container="rad"] > *::after {
  display: flex;
  width: 100%;
  height: 100%;
  content: attr(aria-label);
  position: absolute;
  top: 0;
  left: 0;
  align-items: center;
  /* Here a circle image is created in the top center of the element and then it is rotated with
  a percentage defined with --pss-value relative to 360 degrees, which is a complete circumference */
  transform-origin: 50% 50%;
  transform: rotate(calc(360deg / (100 / min(max(var(--pss-value), 0.001), 100))));
  background-image: radial-gradient(
    circle at 50% calc(var(--pss-width) / 2 + 0.1%),
    var(--pss-right) calc(var(--pss-width) / 2 + 0.05%),
    transparent calc(var(--pss-width) / 2 + 0.15%)
  );
}
